import random

PC1=[57,49,41,33,25,17,9,
1,58,50,42,34,26,18
,10,2,59,51,43,35,27
,19,11,3,60,52,44,36
,63,55,47,39,31,23,15
,7,62,54,46,38,30,22
,14,6,61,53,45,37,29
,21,13,5,28,20,12,4]

S1=[14,4,13,1,2,15,11,8,3,1,6,12,5,9,0,7,
0,15,7,4,14,2,13,1,1,6,12,11,9,5,3,8,
4,1,14,8,13,6,2,11,15,12,9,7,3,1,5,0,
15,12,8,2,4,9,1,7,5,11,3,14,1,0,6,13]

S2=[15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,1,
3,13,4,7,15,2,8,14,12,0,1,1,6,9,11,5,
0,14,7,11,1,4,13,1,5,8,12,6,9,3,2,15,
13,8,1,1,3,15,4,2,11,6,7,12,0,5,14,9]

S3=[1,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8,
13,7,0,9,3,4,6,1,2,8,5,14,12,11,15,1,
13,6,4,9,8,15,3,0,11,1,2,12,5,1,14,7,
1,1,13,0,6,9,8,7,4,15,14,3,11,5,2,12]

S4=[7,13,14,3,0,6,9,1,1,2,8,5,11,12,4,15,
13,8,11,5,6,15,0,3,4,7,2,12,1,1,14,9,
1,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4,
3,15,0,6,1,1,13,8,9,4,5,11,12,7,2,14]

S5=[2,12,4,1,7,1,11,6,8,5,3,15,13,0,14,9,
14,11,2,12,4,7,13,1,5,0,15,1,3,9,8,6,
4,2,1,11,1,13,7,8,15,9,12,5,6,3,0,14,
11,8,12,7,1,14,2,13,6,15,0,9,1,4,5,3]

S6=[12,1,1,15,9,2,6,8,0,13,3,4,14,7,5,11,
1,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8,
9,14,15,5,2,8,12,3,7,0,4,1,1,13,11,6,
4,3,2,12,9,5,15,1,11,14,1,7,6,0,8,13]

S7=[4,11,2,14,15,0,8,13,3,12,9,7,5,1,6,1,
13,0,11,7,4,9,1,1,14,3,5,12,2,15,8,6,
1,4,11,13,12,3,7,14,1,15,6,8,0,5,9,2,
6,11,13,8,1,4,1,7,9,5,0,15,14,2,3,12]

S8=[13,2,8,4,6,15,11,1,1,9,3,14,5,0,12,7,
1,15,13,8,1,3,7,4,12,5,6,11,0,14,9,2,
7,11,4,1,9,12,14,2,0,6,1,13,15,3,5,8,
2,1,14,7,4,1,8,13,15,12,9,0,3,5,6,11]




keys=[[-1 for i in range(0,56)] for j in range(0,16)]
shift_reg=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1]
comp_P_key_box=[14 ,17 ,11 ,24 ,1 ,5 ,3 ,28
,15 ,6 ,21 ,10 ,23 ,19 ,12 ,4
,26 ,8 ,16 ,7 ,27 ,20 ,13 ,2
,41 ,52 ,31 ,37 ,47 ,55 ,30 ,40
,51 ,45 ,33 ,48 ,44 ,49 ,39 ,56
,34 ,53 ,46 ,42 ,50 ,36 ,29 ,32]

def key_gen(K):
	for i in range(0,16):
		for j in range(0,56):
			if j<28: #shift op
				shift=j-shift_reg[i]
				if shift<0:
					shift=27+shift

			else:
				shift=j-shift_reg[i]
				if shift<28:
					shift=55-(28-shift)
			keys[i][j]=K[shift]

		temp=keys[i]	
		#comp P box	
		for k in range(0,len(comp_P_key_box)):
			keys[i][k]=temp[comp_P_key_box[k]-1]

	print("The keys generated")
	for i in range(0,16):
		print("Key%d: %s"%(i+1,keys[i]))

def function_R(R=[],i):
	for k in range(0,len(PC1)):  #48bits generated
		R[i]=R[PC[k]-1]

	for k in range(0,len(PC1)):








'''
PT=("0100111001000101010101100101001001010001010101010100100101010100")
PT=list(PT)

K=("0001001100110100010101110111100110011011101111001101111111110001")
K=list(K)

'''
#generator of PT
PT=[]
for i in range(0,64):
	PT.append(random.randrange(0,2))
print ("The Plaintext generated:",PT)

#generator of K
K=[]
for i in range(0,64):
	K.append(random.randrange(0,2))
print ("The 64bit key generated:",K)

#remove 8th element
for i in range(0,64,8):
	del(K[i-1])

key_gen(K)

for i in range(0,16):
	R=PT[32:64]
	L=PT[0:32]

	function_R(R,i)
	
	PT[0:32]=R
	PT[32:64]=L

	print("The plaintext after round%d: %s"%(i,PT))